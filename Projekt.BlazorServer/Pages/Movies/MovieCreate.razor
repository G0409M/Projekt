@* @page "/movie/create"
@inject IMovieService _movieService
@inject NavigationManager _navigationManager
@using FluentValidation.AspNetCore

@using Projekt.SharedKernel.Dto.Movie

<PageTitle>Create new movie</PageTitle>
<h1>Create new movie</h1>

<EditForm Model="@_movie" OnValidSubmit="@CreateMovie">
    <FluentValidationValidator @ref="_fluentValidationValidator" DisableAssemblyScanning="@true" />
    <ValidationSummary />
    <div class="form-group">
        <label>Title: </label>
        <InputText @bind-Value="@_movie.Title" class="form-control" />
        <ValidationMessage For="@(() => _movie.Title)" />
    </div>
    <div class="form-group">
        <label>Genre: </label>
        <InputText @bind-Value="@_movie.Genre" class="form-control" />
        <ValidationMessage For="@(() => _movie.Genre)" />
    </div>
    <div class="form-group">
        <label>Length: </label>
        <InputNumber @bind-Value="@_movie.FilmLength" class="form-control" />
        <ValidationMessage For="@(() => _movie.FilmLength)" />
    </div>
    <div class="form-group">
        <label>Release Date: </label>
        <InputDate @bind-Value="@_movie.ReleaseDate" class="form-control" />
        <ValidationMessage For="@(() => _movie.ReleaseDate)" />
    </div>
    <br />
    <div class="form-group">
        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span>
            Create
        </button>
        <button @onclick="BackToList" class="btn btn-secondary" type="button">
            <span class="oi oi-media-skip-backward"></span>
            Back To List
        </button>
    </div>
</EditForm>

 @code {
    private CreateMovieDto _movie = new();
    private FluentValidationValidator? _fluentValidationValidator;

    private void CreateMovie()
    {
        _movieService.Create(_movie);
        _navigationManager.NavigateTo("/movie");
    }

    private void BackToList()
    {
        _navigationManager.NavigateTo("/movie");
    } *@