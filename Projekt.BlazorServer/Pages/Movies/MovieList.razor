@page "/movies"
@using Projekt.SharedKernel.Dto.Movie
@inject IMovieService _movieService
@inject NavigationManager _navigationManager
@inject IJSRuntime _js

<PageTitle>Movie List</PageTitle>
<h1>Movie List</h1>
<br />
<div>
    <div>
        <br /><br />
        <table class="table">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Genre</th>
                    <th>Length</th>
                    <th>Release Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var m in _movieList)
                {
                    <tr>
                        <td>@m.Title</td>
                        <td>@m.Genre</td>
                        <td>@m.FilmLength</td>
                        <td>@m.ReleaseDate.ToShortDateString()</td>
                        <td>
                            <button class="btn btn-danger" @onclick="@(() =>DeleteMovie(@m.Id))"><span class="oi oi-trash" aria-hidden="true"></span> Delete </button>
                            <button class="btn btn-info" @onclick="@(() => NavigateToDetails(@m.Id))"><span class="oi oi-eye" aria-hidden="true"></span> Details </button>
                            <button class="btn btn-warning" @onclick="@(() => EditMovie(@m.Id))"><span class="oi oi-pencil" aria-hidden="true"></span> Edit </button>
                        </td>
                        
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="text-right">
        <button class="btn btn-primary" @onclick="NavigateToCreate"><span class="oi oi-plus" aria-hidden="true"></span> Create New Movie </button>
    </div>
</div>

@code {
    private List<MovieDto> _movieList = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _movieList = _movieService.GetAll();
    }

    protected async Task DeleteMovie(int id)
    {
        var movie = _movieList.First(q => q.Id == id);
        var confirm = await _js.InvokeAsync<bool>("confirm", $"Are You Sure You Want To Delete {movie.Title}?");
        if (confirm)
        {
            _movieService.Delete(id);
            OnInitialized();
        }
    }

    private void NavigateToDetails(int id)
    {
        _navigationManager.NavigateTo($"/movies/{id}");
    }

    private void NavigateToCreate()
    {
        _navigationManager.NavigateTo("/movies/create");
    }


    private void EditMovie(int id)
    {
        _navigationManager.NavigateTo($"/movies/edit/{id}");
    }



}